name: create gemmm distributions

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*.*.*'

  pull_request:
    branches:
      - main
      - dev

jobs:
  build_wheels:
    #name: Build wheels for Python v${{ matrix.python[1] }}
    #runs-on: ${{ matrix.os }}
    name: Build wheel for Python 3.11
    runs-on: ubuntu-latest

    # shouldn't need a strategy if creating a single wheel
    #strategy:
      # Ensure that a wheel builder finishes even if another fails
      #fail-fast: false
      #matrix:
        #include:
          #- os: ubuntu-latest
          #  python: [cp311, "3.11"]
          #- os: ubuntu-latest
          #  python: [cp312, "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          # We need quite a deep fetch so that we get the versioning right 
          fetch-depth: 500
      # Fetch tag manually because fetch-tags option for checkout@v4 does not work
      - name: Fetch tag annotations
        run: |
          # Fetch tag manually because fetch-tags option for checkout@v4 does not work
          git fetch --force --tags --depth 1
      - id: read_tag
        name: Set VERSION env variable
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: |
          # Set tag from GitHub: using git describe for tags inside the run script
          # seems not working
          echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/setup-python@v5
        with:
          #python-version: ${{ matrix.python[1] }}
          python-version: '3.11' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          pip install -r requirements.txt

      - name: Build wheels
        run: |
          python -m build

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          #name: wheel-${{ matrix.python[0] }}
          name: gemmm-cp311-none-any
          path: dist/*

  upload_pypi:
    name: Upload release to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    environment:
      name: pypi
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: gemmm-cp311-none-any
          path: dist/

      # live push to pypi on tagging the main branch
      - uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        with:
          repository-url: https://upload.pypi.org/legacy/

      # upload to test pypi (on dev branch commit)
      - uses: pypa/gh-action-pypi-publish@release/v1
        if: github.ref == 'refs/heads/dev'
        with:
          repository-url: https://test.pypi.org/legacy/
      
